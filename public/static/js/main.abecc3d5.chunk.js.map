{"version":3,"sources":["assets/opq-logo.svg","assets/upload.svg","contants/colors.ts","components/Navbar.tsx","hooks/usePostRequest.ts","hooks/useDocumentTitle.ts","components/styled/Button.tsx","components/Loader.tsx","components/Alert.tsx","components/FileUpload.tsx","config/opq.ts","components/CopyUrl.tsx","components/ImagePage.tsx","actions/types.ts","components/ThemeSwitcher.tsx","actions/theme.ts","routes/Router.tsx","components/GlobalStyles.tsx","App.tsx","serviceWorker.ts","services/theme.ts","reducers/index.ts","reducers/themeReducer.ts","index.tsx","store/createStore.ts"],"names":["module","exports","Colors","Wrapper","styled","div","PRIMARY","WHITE","Logo","Link","Opacity","a","Navbar","to","href","target","width","height","src","opqLogo","alt","usePostRequest","url","data","useState","isLoading","setIsLoading","responseData","setResponseData","error","setError","useCallback","axios","method","result","sendData","useDocumentTitle","title","useEffect","document","Button","button","PRIMARY_DARK","cubeAnimation","keyframes","Loader","Alert","show","text","onConfirm","shouldShow","setShouldShow","allowedExtensions","fadeIn","theme","BLACK","AnimationWrapper","Header","h1","DARK_GRAY","Label","label","upload","Name","h2","Info","last","ButtonWrapper","Input","input","FileUpload","file","setFile","fileData","setFileData","fileError","setFileError","callApi","history","useHistory","headerText","name","handleRemoveFile","push","imageDetails","handle","onClick","onChange","e","currentTarget","files","reader","FileReader","onload","event","fileBase64","readAsDataURL","type","accept","size","fileName","splittedFileName","split","chunksNumber","length","includes","isValidExtension","API","UPLOAD_OPTIONS","autostart","endpoint","params","blockSize","partSize","DOWNLOAD_OPTIONS","CopyUrl","buttonText","setButtonText","id","readOnly","value","window","location","getElementById","select","execCommand","ActionTypes","Image","img","ImagePage","match","image","setImage","setFileName","MasterHandle","uploadOpts","downloadOpts","downloadFile","toFile","then","addEventListener","this","catch","ThemeSwitcher","dispatch","useDispatch","activeTheme","useSelector","state","themeToSet","switchTheme","payload","checked","htmlFor","createBrowserHistory","Router","path","component","GlobalStyle","createGlobalStyle","App","GlobalStyles","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","setActiveTheme","localStorage","setItem","getActiveTheme","getItem","reducers","combineReducers","action","ReactDOM","render","store","createReduxStore","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.abecc3d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/opq-logo.3153ffe8.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.fefec929.svg\";","export enum Colors {\n  PRIMARY = '#4287f5',\n  PRIMARY_DARK = '#4287f5',\n  WHITE = '#fff',\n  BLACK = '#1b1b1b',\n  DARK_GRAY = '#333'\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport opqLogo from '../assets/opq-logo.svg';\nimport { Colors } from '../contants/colors';\n\nfunction Navbar() {\n  return (\n    <Wrapper>\n      <Logo to=\"/\">\n        OPQ PIC\n        <p>Image uploading and sharing platform</p>\n      </Logo>\n      <Opacity href=\"https://opacity.io\" target=\"_blank\">\n        Powered by <img width=\"40\" height=\"40\" src={opqLogo} alt=\"Opacity\" />\n      </Opacity>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  background-color: ${Colors.PRIMARY};\n  padding: 20px 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${Colors.WHITE};\n`;\n\nconst Logo = styled(Link)`\n  font-size: 24px;\n  font-weight: 700;\n  color: ${Colors.WHITE};\n  text-decoration: none;\n\n  p {\n    font-size: 14px;\n    font-weight: 400;\n    margin: 0;\n\n    @media screen and (max-width: 500px) {\n      display: none;\n    }\n  }\n`;\n\nconst Opacity = styled.a`\n  display: flex;\n  align-items: center;\n  color: ${Colors.WHITE};\n  text-decoration: none;\n\n  img {\n    margin-left: 8px;\n  }\n`;\n\nexport default Navbar;\n","import { useState, useCallback } from 'react';\nimport axios from 'axios';\n\ntype Result = {\n  data: {\n    imageDetails: {\n      handle: string;\n    };\n  };\n};\n\nfunction usePostRequest(url: string, data: any) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [responseData, setResponseData] = useState();\n  const [error, setError] = useState('');\n\n  const callApi = useCallback(() => {\n    const sendData = async () => {\n      setIsLoading(true);\n\n      try {\n        const result: Result = await axios(url, { data, method: 'POST' });\n        setResponseData(result.data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    sendData();\n  }, [data, url]);\n\n  return [{ isLoading, responseData, error }, callApi] as any;\n}\n\nexport default usePostRequest;\n","import { useEffect } from 'react';\n\nfunction useDocumentTitle(title: string) {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n\nexport default useDocumentTitle;\n","import styled from 'styled-components';\n\nimport { Colors } from '../../contants/colors'\n\nconst Button = styled.button`\n  padding: 15px 20px;\n  min-width: 220px;\n  font-size: 18px;\n  font-weight: 700;\n  text-transform: uppercase;\n  background-color: ${Colors.PRIMARY};\n  color: #fff;\n  border: 2px solid transparent;\n  font-family: inherit;\n  cursor: pointer;\n  border-radius: 5px;\n\n  &:hover {\n    background-color: ${Colors.PRIMARY_DARK};\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Colors } from '../contants/colors';\n\nfunction Loader() {\n  return (\n    <Wrapper>\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n    </Wrapper>\n  );\n}\n\nconst cubeAnimation = keyframes`\n  0%, 70%, 100% {\n    transform: scale3D(1, 1, 1);\n  }\n\n  35% {\n    transform: scale3D(0, 0, 1);\n  }\n`;\n\nconst Wrapper = styled.div`\n  width: 120px;\n  height: 120px;\n  margin: 0 auto 20px auto;\n\n  div {\n    width: 33%;\n    height: 34%;\n    background-color: ${Colors.PRIMARY};\n    float: left;\n    animation: ${cubeAnimation} 1.3s infinite ease-in-out;\n\n    &:nth-child(1) {\n      animation-delay: 0.2s;\n    }\n\n    &:nth-child(2) {\n      animation-delay: 0.3s;\n    }\n\n    &:nth-child(3) {\n      animation-delay: 0.4s;\n    }\n\n    &:nth-child(4) {\n      animation-delay: 0.1s;\n    }\n\n    &:nth-child(5) {\n      animation-delay: 0.2s;\n    }\n\n    &:nth-child(6) {\n      animation-delay: 0.3s;\n    }\n\n    &:nth-child(7) {\n      animation-delay: 0s;\n    }\n\n    &:nth-child(8) {\n      animation-delay: 0.1s;\n    }\n\n    &:nth-child(9) {\n      animation-delay: 0.2s;\n    }\n  }\n`;\n\nexport default Loader;\n","import React, { useState } from 'react';\n// @ts-ignore\nimport SweetAlert from 'sweetalert2-react';\n\ninterface IProps {\n  show: boolean;\n  title: string;\n  text: string;\n  onConfirm: Function;\n}\n\nfunction Alert({ show, title, text, onConfirm }: IProps) {\n  const [shouldShow, setShouldShow] = useState(show);\n\n  function handleConfirm() {\n    setShouldShow(false);\n    onConfirm();\n  }\n\n  return (\n    <SweetAlert\n      show={shouldShow}\n      title={title}\n      text={text}\n      onConfirm={handleConfirm}\n    />\n  );\n}\n\nexport default Alert;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\n\nimport usePostRequest from '../hooks/usePostRequest';\nimport useDocumentTitle from '../hooks/useDocumentTitle';\nimport Button from './styled/Button';\nimport upload from '../assets/upload.svg';\nimport Loader from './Loader';\nimport Alert from './Alert';\nimport { Colors } from '../contants/colors';\n\ntype FileData = {\n  fileBase64: string;\n  name: string;\n};\n\nconst allowedExtensions = ['jpg', 'jpeg', 'png', 'gif', 'svg', 'bmp'];\n\nfunction isValidExtension(fileName: string): boolean {\n  const splittedFileName = fileName.split('.');\n  const chunksNumber = splittedFileName.length;\n\n  if (allowedExtensions.includes(splittedFileName[chunksNumber - 1])) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction FileUpload() {\n  const [file, setFile] = useState<File | null>();\n  const [fileData, setFileData] = useState<FileData | null>();\n  const [fileError, setFileError] = useState('');\n  const [{ isLoading, responseData }, callApi] = usePostRequest(\n    '/api/images',\n    fileData\n  );\n  const history = useHistory();\n  useDocumentTitle('OPQ PIC | Image Uploader');\n\n  const headerText = isLoading\n    ? `Uploading ${file!.name}...`\n    : 'Upload your image';\n\n  useEffect(() => {\n    if (responseData) {\n      history.push('/share/' + responseData?.data?.imageDetails?.handle);\n    }\n  }, [history, responseData]);\n\n  function handleChange(e: React.FormEvent<HTMLInputElement>) {\n    const file = e.currentTarget.files![0];\n    setFileError('');\n    setFile(file);\n\n    const reader = new FileReader();\n    reader.onload = (event: any) => {\n      const data = {\n        fileBase64: event.target.result,\n        name: file.name\n      };\n\n      setFileData(data);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  function handleRemoveFile() {\n    setFileData(null);\n    setFile(null);\n  }\n\n  function handleUpload() {\n    if (file!.size > 5242880) {\n      return setFileError('Maxiumum file size is: 5MB');\n    }\n\n    if (!isValidExtension(file!.name)) {\n      return setFileError(\n        'Allowed extensions are: .jpg, .jpeg, .png, .gif, .svg, .bmp'\n      );\n    }\n\n    callApi();\n  }\n\n  function handleConfirm() {\n    handleRemoveFile();\n  }\n\n  return (\n    <Wrapper>\n      <AnimationWrapper>\n        {!!fileError && (\n          <Alert\n            show={!!fileError}\n            title=\"Error\"\n            text={fileError}\n            onConfirm={handleConfirm}\n          />\n        )}\n        <Header>{headerText}</Header>\n        {isLoading && <Loader />}\n        {file && !isLoading && (\n          <Name onClick={handleRemoveFile}>{file.name}</Name>\n        )}\n        {!file && (\n          <>\n            <Info>\n              Allowed extensions: <span>jpg, jpeg, png, gif</span>\n            </Info>\n            <Info last>\n              Maximum file size: <span>5MB</span>\n            </Info>\n          </>\n        )}\n        {!file && (\n          <Label>\n            <span>Click here to select file</span>\n            <i />\n            <Input\n              onChange={handleChange}\n              type=\"file\"\n              accept=\".jpg, .jpeg, .png, .gif, .svg, .bmp\"\n            />\n          </Label>\n        )}\n        {file && !isLoading && (\n          <ButtonWrapper>\n            <Button onClick={handleUpload}>Upload</Button>\n          </ButtonWrapper>\n        )}\n      </AnimationWrapper>\n    </Wrapper>\n  );\n}\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst Wrapper = styled.div`\n  min-width: 100vw;\n  min-height: calc(100vh - 159px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding: 0 20px;\n  background-color: ${({ theme }) =>\n    theme.theme === 'light' ? Colors.WHITE : Colors.BLACK};\n`;\n\nconst AnimationWrapper = styled.div`\n  animation: ${fadeIn} 1s linear;\n`;\n\nconst Header = styled.h1`\n  color: ${({ theme }) =>\n    theme.theme === 'light' ? Colors.DARK_GRAY : Colors.WHITE};\n  font-size: 42px;\n  margin-bottom: 20px;\n  text-align: center;\n  word-break: break-all;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 400px;\n  height: 300px;\n  max-width: 90vw;\n  max-height: 90vh;\n  border: 3px dashed ${Colors.PRIMARY};\n  margin-bottom: 40px;\n  cursor: pointer;\n\n  span {\n    color: ${Colors.PRIMARY};\n    position: relative;\n    top: 20px;\n    font-size: 18px;\n    font-weight: 700;\n\n    &::after {\n      content: '';\n      background: url(${upload}) no-repeat center center;\n      background-size: 100%;\n      width: 60px;\n      height: 50px;\n      position: absolute;\n      left: 50%;\n      top: -60px;\n      transform: translateX(-50%);\n    }\n  }\n`;\n\nconst Name = styled.h2`\n  font-size: 32px;\n  color: ${({ theme }) =>\n    theme.theme === 'light' ? Colors.DARK_GRAY : Colors.WHITE};\n  text-align: center;\n  word-break: break-all;\n\n  &:hover {\n    text-decoration: line-through;\n  }\n`;\n\nconst Info = styled.div`\n  font-size: 14px;\n  color: ${({ theme }) =>\n    theme.theme === 'light' ? Colors.DARK_GRAY : Colors.WHITE};\n  margin-bottom: ${({ last }: { last?: boolean }) => (last ? '16px' : '8px')};\n  font-style: italic;\n  text-align: right;\n\n  span {\n    font-weight: 700;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  text-align: center;\n`;\n\nconst Input = styled.input`\n  display: none;\n`;\n\nexport default FileUpload;\n","const API = {\n  STORAGE_NODE: 'https://broker-1.opacitynodes.com:3000'\n};\n\nexport const UPLOAD_OPTIONS = {\n  autostart: true,\n  endpoint: API.STORAGE_NODE,\n  params: {\n    blockSize: 64 * 1024, // 256 KiB encryption blocks\n    partSize: 10 * 1024 * 1024\n  }\n};\n\nexport const DOWNLOAD_OPTIONS = {\n  endpoint: API.STORAGE_NODE,\n  autostart: true\n};\n\nexport const HANDLE =\n  '8e4dfb806861314e21e2e648d96fdf90070f6c782587c785731bd278cbf6d005d5cfc6add4c51bc072dc370e6d4e05acf451a81cffda7680c360380760b66f18';\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Colors } from '../contants/colors';\nimport Button from './styled/Button';\n\nfunction CopyUrl() {\n  const [buttonText, setButtonText] = useState('Copy to clipboard');\n\n  function handleClick() {\n    // @ts-ignore\n    document.getElementById('url-input').select();\n    document.execCommand('copy');\n    setButtonText('Copied!');\n  }\n\n  return (\n    <Wrapper>\n      <input id=\"url-input\" type=\"text\" readOnly value={window.location.href} />\n      <Button onClick={handleClick}>{buttonText}</Button>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  padding: 20px 0;\n  display: flex;\n  justify-content: center;\n\n  input {\n    width: 400px;\n    border: 2px solid ${Colors.PRIMARY};\n    padding: 0 10px;\n    box-shadow: unset;\n    border-radius: 5px;\n    margin-right: 16px;\n    max-width: 90vw;\n  }\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    text-align: center;\n\n    input {\n      margin-bottom: 16px;\n      height: 40px;\n    }\n  }\n`;\n\nexport default CopyUrl;\n","import React, { useState, useEffect } from 'react';\nimport { MasterHandle } from 'opaque';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { UPLOAD_OPTIONS, DOWNLOAD_OPTIONS, HANDLE } from '../config/opq';\nimport useDocumentTitle from '../hooks/useDocumentTitle';\nimport CopyUrl from './CopyUrl';\nimport Loader from './Loader';\nimport { Colors } from '../contants/colors';\n\ninterface IProps {\n  match: {\n    params: {\n      handle: string;\n    };\n  };\n}\n\nfunction ImagePage({\n  match: {\n    params: { handle }\n  }\n}: IProps) {\n  const [image, setImage] = useState<string>('');\n  const [fileName, setFileName] = useState('');\n  useDocumentTitle(`OPQ PIC | ${fileName}`);\n  const history = useHistory();\n\n  useEffect(() => {\n    const opqHandler = new MasterHandle(\n      { handle: HANDLE },\n      { uploadOpts: UPLOAD_OPTIONS, downloadOpts: DOWNLOAD_OPTIONS }\n    );\n    const downloadHandler = opqHandler.downloadFile(handle);\n    downloadHandler\n      .toFile()\n      .then((file: any) => {\n        const reader = new FileReader();\n        setFileName(file.name);\n\n        reader.addEventListener('load', function() {\n          const result = this.result as string;\n          setImage(result);\n        });\n\n        reader.readAsDataURL(file);\n      })\n      .catch(() => {\n        history.push('/');\n      });\n  }, [handle, history]);\n\n  return (\n    <Wrapper>\n      <CopyUrl />\n      {image ? <Image src={image} alt={fileName} /> : <Loader />}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  background-color: ${({ theme }) =>\n    theme.theme === 'light' ? Colors.WHITE : Colors.BLACK};\n  min-height: calc(100vh - 83px);\n  text-align: center;\n`;\n\nconst Image = styled.img`\n  max-width: 100vw;\n  max-height: calc(100vh - 200px);\n  display: inline-block;\n  padding: 20px 0;\n`;\n\nexport default ImagePage;\n","import { SwitchThemeAction } from './theme';\n\nexport enum ActionTypes {\n  switchTheme\n}\n\nexport type Action = SwitchThemeAction;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { switchTheme } from '../actions';\nimport { StoreState } from '../reducers';\nimport { Colors } from '../contants/colors';\n\nfunction ThemeSwitcher() {\n  const dispatch = useDispatch();\n  const { activeTheme } = useSelector((state: StoreState) => state.theme);\n  const themeToSet = activeTheme === 'dark' ? 'light' : 'dark';\n\n  return (\n    <Wrapper>\n      <span>Dark mode</span>\n      <input\n        id=\"theme-switcher\"\n        type=\"checkbox\"\n        onChange={() => dispatch(switchTheme(themeToSet))}\n        checked={activeTheme === 'dark'}\n      />\n      <label htmlFor=\"theme-switcher\" />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 100px;\n  right: 40px;\n  text-align: center;\n\n  @media screen and (max-width: 992px) {\n    position: static;\n    width: 80px;\n    margin: 20px 40px 0 auto;\n  }\n\n  span {\n    display: inline-block;\n    margin-bottom: 8px;\n    font-size: 14px;\n    font-weight: 700;\n    color: ${({ theme }) =>\n      theme.theme === 'light' ? Colors.DARK_GRAY : Colors.WHITE};\n  }\n\n  input {\n    display: none;\n  }\n\n  input:checked {\n    & + label {\n      background-color: ${Colors.PRIMARY};\n\n      &::before {\n        left: 50px;\n      }\n    }\n  }\n\n  label {\n    cursor: pointer;\n    display: block;\n    width: 80px;\n    height: 30px;\n    border-radius: 30px;\n    background-color: ${Colors.DARK_GRAY};\n    position: relative;\n\n    &::before {\n      content: '';\n      position: absolute;\n      left: 10px;\n      top: 50%;\n      transform: translateY(-50%);\n      width: 20px;\n      height: 20px;\n      background-color: ${Colors.WHITE};\n      border-radius: 50%;\n      transition: all 0.4s;\n    }\n  }\n`;\n\nexport default ThemeSwitcher;\n","import { ActionTypes } from './types';\n\nexport interface SwitchThemeAction {\n  type: ActionTypes.switchTheme;\n  payload: string;\n}\n\nexport function switchTheme(theme: string): SwitchThemeAction {\n  return {\n    type: ActionTypes.switchTheme,\n    payload: theme\n  };\n}\n","import React from 'react';\nimport { Router as BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nimport Navbar from '../components/Navbar';\nimport FileUpload from '../components/FileUpload';\nimport ImagePage from '../components/ImagePage';\nimport ThemeSwitcher from '../components/ThemeSwitcher';\n\nconst history = createBrowserHistory();\n\nfunction Router() {\n  return (\n    <BrowserRouter history={history}>\n      <Navbar />\n      <ThemeSwitcher />\n      <Switch>\n        <Route path=\"/share/:handle\" component={ImagePage} />\n        <Route path=\"/\" component={FileUpload} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { createGlobalStyle } from 'styled-components';\nimport 'normalize.css';\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before, \n  *::after {\n    box-sizing: border-box;\n  }\n\n  html {\n    font-family: \"Lato\", sans-serif;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport Router from './routes/Router';\nimport GlobalStyles from './components/GlobalStyles';\nimport { useSelector } from 'react-redux';\nimport { StoreState } from './reducers';\n\nconst App = () => {\n  const { activeTheme } = useSelector((state: StoreState) => state.theme);\n\n  return (\n    <ThemeProvider theme={{ theme: activeTheme }}>\n      <Router />\n      <GlobalStyles />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export function setActiveTheme(activeTheme: string): void {\n  window.localStorage.setItem('activeTheme', activeTheme);\n}\n\nexport function getActiveTheme(): string {\n  const activeTheme = window.localStorage.getItem('activeTheme');\n\n  if (activeTheme) {\n    return activeTheme;\n  }\n\n  return 'light';\n}\n","import { combineReducers } from 'redux';\n\nimport { ThemeState, themeReducer } from './themeReducer';\n\nexport interface StoreState {\n  theme: ThemeState;\n}\n\nexport const reducers = combineReducers<StoreState>({\n  theme: themeReducer\n});\n","import { Action, ActionTypes } from '../actions/types';\n\nimport { getActiveTheme, setActiveTheme } from '../services/theme';\n\nexport interface ThemeState {\n  activeTheme: string;\n}\n\nexport function themeReducer(\n  state: ThemeState = { activeTheme: getActiveTheme() },\n  action: Action\n) {\n  switch (action.type) {\n    case ActionTypes.switchTheme:\n      setActiveTheme(action.payload);\n\n      return {\n        ...state,\n        activeTheme: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from './store/createStore';\n\nReactDOM.render(\n  <Provider store={createStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { createStore as createReduxStore, Store } from 'redux';\n\nimport { StoreState, reducers } from '../reducers/index';\n\nexport function createStore(): Store<StoreState> {\n  return createReduxStore(reducers);\n}\n"],"sourceRoot":""}