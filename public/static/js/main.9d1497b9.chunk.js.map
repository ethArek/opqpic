{"version":3,"sources":["assets/opq-logo.svg","assets/upload.svg","components/Navbar.tsx","hooks/usePostRequest.ts","hooks/useDocumentTitle.ts","components/styled/Button.tsx","components/Loader.tsx","components/Alert.tsx","components/FileUpload.tsx","config/opq.ts","components/CopyUrl.tsx","components/ImagePage.tsx","routes/Router.tsx","components/GlobalStyles.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Wrapper","styled","div","Logo","Link","Opacity","a","Navbar","to","href","target","width","height","src","opqLogo","alt","usePostRequest","url","data","useState","isLoading","setIsLoading","responseData","setResponseData","error","setError","useCallback","axios","method","result","sendData","useDocumentTitle","title","useEffect","document","Button","button","cubeAnimation","keyframes","Loader","Alert","show","text","onConfirm","shouldShow","setShouldShow","allowedExtensions","fadeIn","Header","h1","Label","label","upload","Name","h2","Info","last","ButtonWrapper","Input","input","FileUpload","file","setFile","fileData","setFileData","fileError","setFileError","callApi","history","useHistory","headerText","name","handleRemoveFile","push","imageDetails","handle","onClick","onChange","e","currentTarget","files","reader","FileReader","onload","event","fileBase64","readAsDataURL","type","accept","size","fileName","splittedFileName","split","chunksNumber","length","includes","isValidExtension","API","UPLOAD_OPTIONS","autostart","endpoint","params","blockSize","partSize","DOWNLOAD_OPTIONS","CopyUrl","buttonText","setButtonText","id","readOnly","value","window","location","getElementById","select","execCommand","Image","img","ImagePage","match","image","setImage","setFileName","MasterHandle","uploadOpts","downloadOpts","downloadFile","toFile","then","addEventListener","this","catch","createBrowserHistory","Router","path","component","GlobalStyle","createGlobalStyle","App","GlobalStyles","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,s6BCoB3C,IAAMC,EAAUC,IAAOC,IAAV,KASPC,EAAOF,YAAOG,IAAPH,CAAH,KAaJI,EAAUJ,IAAOK,EAAV,KAWEC,EA/Cf,WACE,OACE,kBAACP,EAAD,KACE,kBAACG,EAAD,CAAMK,GAAG,KAAT,UAEE,oEAEF,kBAACH,EAAD,CAASI,KAAK,qBAAqBC,OAAO,UAA1C,cACa,yBAAKC,MAAM,KAAKC,OAAO,KAAKC,IAAKC,IAASC,IAAI,e,gDCsBlDC,MAzBf,SAAwBC,EAAaC,GAAY,IAAD,EACZC,oBAAS,GADG,mBACvCC,EADuC,KAC5BC,EAD4B,OAENF,qBAFM,mBAEvCG,EAFuC,KAEzBC,EAFyB,OAGpBJ,mBAAS,IAHW,mBAGvCK,EAHuC,KAGhCC,EAHgC,KAsB9C,MAAO,CAAC,CAAEL,YAAWE,eAAcE,SAjBnBE,uBAAY,YACZ,uCAAG,4BAAApB,EAAA,6DACfe,GAAa,GADE,kBAIgBM,IAAMV,EAAK,CAAEC,OAAMU,OAAQ,SAJ3C,OAIPC,EAJO,OAKbN,EAAgBM,EAAOX,MALV,gDAObO,EAAS,EAAD,IAPK,yBASbJ,GAAa,GATA,4EAAH,qDAadS,KACC,CAACZ,EAAMD,MCvBGc,MANf,SAA0BC,GACxBC,qBAAU,WACRC,SAASF,MAAQA,IAChB,CAACA,K,kYCHN,IAkBeG,EAlBAlC,IAAOmC,OAAV,K,mgCCiBZ,IAAMC,EAAgBC,YAAH,KAUbtC,EAAUC,IAAOC,IAAV,IAUImC,GAwCFE,EA5Ef,WACE,OACE,kBAAC,EAAD,KACE,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,gC,kBCeSC,MAlBf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMT,EAAkC,EAAlCA,MAAOU,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,UAAqB,EACnBxB,mBAASsB,GADU,mBAChDG,EADgD,KACpCC,EADoC,KAQvD,OACE,kBAAC,IAAD,CACEJ,KAAMG,EACNZ,MAAOA,EACPU,KAAMA,EACNC,UAVJ,WACEE,GAAc,GACdF,Q,wqDCAJ,IAAMG,EAAoB,CAAC,MAAO,OAAQ,MAAO,MAAO,MAAO,OAsH/D,IAAMC,EAAST,YAAH,KAUNtC,EAAUC,IAAOC,IAAV,IAKE6C,GAGTC,EAAS/C,IAAOgD,GAAV,KAONC,EAAQjD,IAAOkD,MAAV,IAmBaC,KAYlBC,GAAOpD,IAAOqD,GAAV,KAUJC,GAAOtD,IAAOC,IAAV,KAGS,qBAAGsD,KAAuC,OAAS,SAShEC,GAAgBxD,IAAOC,IAAV,KAIbwD,GAAQzD,IAAO0D,MAAV,KAIIC,GA/Lf,WAAuB,IAAD,EACIzC,qBADJ,mBACb0C,EADa,KACPC,EADO,OAEY3C,qBAFZ,mBAEb4C,EAFa,KAEHC,EAFG,OAGc7C,mBAAS,IAHvB,mBAGb8C,EAHa,KAGFC,EAHE,OAI2BlD,EAC7C,cACA+C,GANkB,0BAIX3C,EAJW,EAIXA,UAAWE,EAJA,EAIAA,aAAgB6C,EAJhB,KAQdC,EAAUC,cAChBtC,EAAiB,4BAEjB,IAAMuC,EAAalD,EAAS,oBACXyC,EAAMU,KADK,OAExB,oBAwBJ,SAASC,IACPR,EAAY,MACZF,EAAQ,MAqBV,OA7CA7B,qBAAU,WAAO,IAAD,IACdmC,EAAQK,KAAK,kBAAYnD,QAAZ,IAAYA,OAAZ,YAAYA,EAAcJ,YAA1B,uBAAY,EAAoBwD,oBAAhC,aAAY,EAAkCC,WAC1D,CAACP,EAAS9C,IA4CX,kBAAC,EAAD,OACK2C,GACD,kBAAC,EAAD,CACExB,OAAQwB,EACRjC,MAAM,QACNU,KAAMuB,EACNtB,UAXR,WACE6B,OAaE,kBAACxB,EAAD,KAASsB,GACRlD,GAAa,kBAAC,EAAD,MACbyC,IAASzC,GACR,kBAACiC,GAAD,CAAMuB,QAASJ,GAAmBX,EAAKU,OAEvCV,GACA,oCACE,kBAACN,GAAD,4BACsB,sDAEtB,kBAACA,GAAD,CAAMC,MAAI,GAAV,sBACqB,wCAIvBK,GACA,kBAACX,EAAD,KACE,2DACA,4BACA,kBAACQ,GAAD,CACEmB,SAvEV,SAAsBC,GACpB,IAAMjB,EAAOiB,EAAEC,cAAcC,MAAO,GACpCd,EAAa,IACbJ,EAAQD,GAER,IAAMoB,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GACf,IAAMlE,EAAO,CACXmE,WAAYD,EAAM1E,OAAOmB,OACzB0C,KAAMV,EAAKU,MAGbP,EAAY9C,IAGd+D,EAAOK,cAAczB,IAyDb0B,KAAK,OACLC,OAAO,yCAIZ3B,IAASzC,GACR,kBAACqC,GAAD,KACE,kBAAC,EAAD,CAAQmB,QAxDhB,WACE,OAAIf,EAAM4B,KAAO,QACRvB,EAAa,8BAvD1B,SAA0BwB,GACxB,IAAMC,EAAmBD,EAASE,MAAM,KAClCC,EAAeF,EAAiBG,OAEtC,QAAIhD,EAAkBiD,SAASJ,EAAiBE,EAAe,IAsDxDG,CAAiBnC,EAAMU,WAM5BJ,IALSD,EACL,iEAiDE,a,UC/HJ+B,GACU,yCAGHC,GAAiB,CAC5BC,WAAW,EACXC,SAAUH,GACVI,OAAQ,CACNC,UAAW,MACXC,SAAU,WAIDC,GAAmB,CAC9BJ,SAAUH,GACVE,WAAW,G,+SCQb,IAAMnG,GAAUC,IAAOC,IAAV,MAeEuG,GAjCf,WAAoB,IAAD,EACmBtF,mBAAS,qBAD5B,mBACVuF,EADU,KACEC,EADF,KAUjB,OACE,kBAAC,GAAD,KACE,2BAAOC,GAAG,YAAYrB,KAAK,OAAOsB,UAAQ,EAACC,MAAOC,OAAOC,SAASvG,OAClE,kBAAC,EAAD,CAAQmE,QAVZ,WAEE1C,SAAS+E,eAAe,aAAaC,SACrChF,SAASiF,YAAY,QACrBR,EAAc,aAMmBD,K,sLCuCrC,IAAMU,GAAQnH,IAAOoH,IAAV,MAOIC,GA9Cf,YAIY,IAFE3C,EAEH,EAHT4C,MACElB,OAAU1B,OAEH,EACiBxD,mBAAiB,IADlC,mBACFqG,EADE,KACKC,EADL,OAEuBtG,mBAAS,IAFhC,mBAEFuE,EAFE,KAEQgC,EAFR,KAGT3F,EAAiB,aAAD,OAAc2D,IAC9B,IAAMtB,EAAUC,cAuBhB,OArBApC,qBAAU,WACW,IAAI0F,KACrB,CAAEhD,OFXN,oIEYI,CAAEiD,WAAY1B,GAAgB2B,aAAcrB,KAEXsB,aAAanD,GAChCoD,SAASC,MAAK,SAACnE,GAC7B,IAAMoB,EAAS,IAAIC,WACnBwC,EAAY7D,EAAKU,MAEjBU,EAAOgD,iBAAiB,QAAQ,WAC9B,IAAMpG,EAASqG,KAAKrG,OACpB4F,EAAS5F,MAGXoD,EAAOK,cAAczB,MACpBsE,OAAM,WACP/D,EAAQK,KAAK,UAEd,CAACE,EAAQP,IAGV,oCACE,kBAAC,GAAD,MACCoD,EAAQ,kBAACJ,GAAD,CAAOvG,IAAK2G,EAAOzG,IAAK2E,IAAe,kBAAC,EAAD,QC5ChDtB,GAAUgE,cAcDC,OAZf,WACE,OACE,kBAAC,IAAD,CAAejE,QAASA,IACtB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkE,KAAK,iBAAiBC,UAAWjB,KACxC,kBAAC,IAAD,CAAOgB,KAAK,IAAIC,UAAW3E,Q,4MCbnC,IAYe4E,GAZKC,YAAH,MCWFC,GATH,WACV,OACE,oCACE,kBAAC,GAAD,MACA,kBAACC,GAAD,QCGcC,QACW,cAA7B7B,OAAOC,SAAS6B,UAEe,UAA7B9B,OAAOC,SAAS6B,UAEhB9B,OAAOC,SAAS6B,SAAStB,MACvB,2DCZNuB,IAASC,OAAO,kBAAC,GAAD,MAAS7G,SAAS+E,eAAe,SDqI3C,kBAAmB+B,WACrBA,UAAUC,cAAcC,MAAMlB,MAAK,SAAAmB,GACjCA,EAAaC,iB","file":"static/js/main.9d1497b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/opq-logo.3153ffe8.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.fefec929.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport opqLogo from '../assets/opq-logo.svg';\n\nfunction Navbar() {\n  return (\n    <Wrapper>\n      <Logo to=\"/\">\n        OPQ PIC\n        <p>Image uploading and sharing platform</p>\n      </Logo>\n      <Opacity href=\"https://opacity.io\" target=\"_blank\">\n        Powered by <img width=\"40\" height=\"40\" src={opqLogo} alt=\"Opacity\" />\n      </Opacity>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  background-color: #4257f5;\n  padding: 20px 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: #fff;\n`;\n\nconst Logo = styled(Link)`\n  font-size: 24px;\n  font-weight: 700;\n  color: #fff;\n  text-decoration: none;\n\n  p {\n    font-size: 14px;\n    font-weight: 400;\n    margin: 0;\n  }\n`;\n\nconst Opacity = styled.a`\n  display: flex;\n  align-items: center;\n  color: #fff;\n  text-decoration: none;\n\n  img {\n    margin-left: 8px;\n  }\n`;\n\nexport default Navbar;\n","import { useState, useCallback } from 'react';\nimport axios from 'axios';\n\ntype Result = {\n  data: {\n    imageDetails: {\n      handle: string;\n    };\n  };\n};\n\nfunction usePostRequest(url: string, data: any) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [responseData, setResponseData] = useState();\n  const [error, setError] = useState('');\n\n  const callApi = useCallback(() => {\n    const sendData = async () => {\n      setIsLoading(true);\n\n      try {\n        const result: Result = await axios(url, { data, method: 'POST' });\n        setResponseData(result.data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    sendData();\n  }, [data, url]);\n\n  return [{ isLoading, responseData, error }, callApi] as any;\n}\n\nexport default usePostRequest;\n","import { useEffect } from 'react';\n\nfunction useDocumentTitle(title: string) {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n\nexport default useDocumentTitle;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  padding: 15px 20px;\n  min-width: 220px;\n  font-size: 18px;\n  font-weight: 700;\n  text-transform: uppercase;\n  background-color: #4287f5;\n  color: #fff;\n  border: 2px solid transparent;\n  font-family: inherit;\n  cursor: pointer;\n  border-radius: 5px;\n\n  &:hover {\n    background-color: #4257f5;\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nfunction Loader() {\n  return (\n    <Wrapper>\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n    </Wrapper>\n  );\n}\n\nconst cubeAnimation = keyframes`\n  0%, 70%, 100% {\n    transform: scale3D(1, 1, 1);\n  }\n\n  35% {\n    transform: scale3D(0, 0, 1);\n  }\n`;\n\nconst Wrapper = styled.div`\n  width: 120px;\n  height: 120px;\n  margin: 0 auto 20px auto;\n\n  div {\n    width: 33%;\n    height: 34%;\n    background-color: #4257f5;\n    float: left;\n    animation: ${cubeAnimation} 1.3s infinite ease-in-out;\n\n    &:nth-child(1) {\n      animation-delay: 0.2s;\n    }\n\n    &:nth-child(2) {\n      animation-delay: 0.3s;\n    }\n\n    &:nth-child(3) {\n      animation-delay: 0.4s;\n    }\n\n    &:nth-child(4) {\n      animation-delay: 0.1s;\n    }\n\n    &:nth-child(5) {\n      animation-delay: 0.2s;\n    }\n\n    &:nth-child(6) {\n      animation-delay: 0.3s;\n    }\n\n    &:nth-child(7) {\n      animation-delay: 0s;\n    }\n\n    &:nth-child(8) {\n      animation-delay: 0.1s;\n    }\n\n    &:nth-child(9) {\n      animation-delay: 0.2s;\n    }\n  }\n`;\n\nexport default Loader;\n","import React, { useState } from 'react';\n// @ts-ignore\nimport SweetAlert from 'sweetalert2-react';\n\ninterface IProps {\n  show: boolean;\n  title: string;\n  text: string;\n  onConfirm: Function;\n}\n\nfunction Alert({ show, title, text, onConfirm }: IProps) {\n  const [shouldShow, setShouldShow] = useState(show);\n\n  function handleConfirm() {\n    setShouldShow(false);\n    onConfirm();\n  }\n\n  return (\n    <SweetAlert\n      show={shouldShow}\n      title={title}\n      text={text}\n      onConfirm={handleConfirm}\n    />\n  );\n}\n\nexport default Alert;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport usePostRequest from \"../hooks/usePostRequest\";\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\nimport Button from \"./styled/Button\";\nimport upload from \"../assets/upload.svg\";\nimport Loader from \"./Loader\";\nimport Alert from \"./Alert\";\n\ntype FileData = {\n  fileBase64: string;\n  name: string;\n};\n\nconst allowedExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"svg\", \"bmp\"];\n\nfunction isValidExtension(fileName: string): boolean {\n  const splittedFileName = fileName.split(\".\");\n  const chunksNumber = splittedFileName.length;\n\n  if (allowedExtensions.includes(splittedFileName[chunksNumber - 1])) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction FileUpload() {\n  const [file, setFile] = useState<File | null>();\n  const [fileData, setFileData] = useState<FileData | null>();\n  const [fileError, setFileError] = useState(\"\");\n  const [{ isLoading, responseData }, callApi] = usePostRequest(\n    \"/api/images\",\n    fileData\n  );\n  const history = useHistory();\n  useDocumentTitle(\"OPQ PIC | Image Uploader\");\n\n  const headerText = isLoading\n    ? `Uploading ${file!.name}...`\n    : \"Upload your image\";\n\n  useEffect(() => {\n    history.push('/share/' + responseData?.data?.imageDetails?.handle);\n  }, [history, responseData]);\n\n  function handleChange(e: React.FormEvent<HTMLInputElement>) {\n    const file = e.currentTarget.files![0];\n    setFileError(\"\");\n    setFile(file);\n\n    const reader = new FileReader();\n    reader.onload = (event: any) => {\n      const data = {\n        fileBase64: event.target.result,\n        name: file.name\n      };\n\n      setFileData(data);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  function handleRemoveFile() {\n    setFileData(null);\n    setFile(null);\n  }\n\n  function handleUpload() {\n    if (file!.size > 5242880) {\n      return setFileError(\"Maxiumum file size is: 5MB\");\n    }\n\n    if (!isValidExtension(file!.name)) {\n      return setFileError(\n        \"Allowed extensions are: .jpg, .jpeg, .png, .gif, .svg, .bmp\"\n      );\n    }\n\n    callApi();\n  }\n\n  function handleConfirm() {\n    handleRemoveFile();\n  }\n\n  return (\n    <Wrapper>\n      {!!fileError && (\n        <Alert\n          show={!!fileError}\n          title=\"Error\"\n          text={fileError}\n          onConfirm={handleConfirm}\n        />\n      )}\n      <Header>{headerText}</Header>\n      {isLoading && <Loader />}\n      {file && !isLoading && (\n        <Name onClick={handleRemoveFile}>{file.name}</Name>\n      )}\n      {!file && (\n        <>\n          <Info>\n            Allowed extensions: <span>jpg, jpeg, png, gif</span>\n          </Info>\n          <Info last>\n            Maximum file size: <span>5MB</span>\n          </Info>\n        </>\n      )}\n      {!file && (\n        <Label>\n          <span>Click here to select file</span>\n          <i />\n          <Input\n            onChange={handleChange}\n            type=\"file\"\n            accept=\".jpg, .jpeg, .png, .gif, .svg, .bmp\"\n          />\n        </Label>\n      )}\n      {file && !isLoading && (\n        <ButtonWrapper>\n          <Button onClick={handleUpload}>Upload</Button>\n        </ButtonWrapper>\n      )}\n    </Wrapper>\n  );\n}\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst Wrapper = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  animation: ${fadeIn} 1s linear;\n`;\n\nconst Header = styled.h1`\n  color: #333;\n  font-size: 42px;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 400px;\n  height: 300px;\n  border: 3px dashed #4257f5;\n  margin-bottom: 40px;\n  cursor: pointer;\n\n  span {\n    color: #4257f5;\n    position: relative;\n    top: 20px;\n    font-size: 18px;\n    font-weight: 700;\n\n    &::after {\n      content: \"\";\n      background: url(${upload}) no-repeat center center;\n      background-size: 100%;\n      width: 60px;\n      height: 50px;\n      position: absolute;\n      left: 50%;\n      top: -60px;\n      transform: translateX(-50%);\n    }\n  }\n`;\n\nconst Name = styled.h2`\n  font-size: 32px;\n  color: #333;\n  text-align: center;\n\n  &:hover {\n    text-decoration: line-through;\n  }\n`;\n\nconst Info = styled.div`\n  font-size: 14px;\n  color: #333;\n  margin-bottom: ${({ last }: { last?: boolean }) => (last ? \"16px\" : \"8px\")};\n  font-style: italic;\n  text-align: right;\n\n  span {\n    font-weight: 700;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  text-align: center;\n`;\n\nconst Input = styled.input`\n  display: none;\n`;\n\nexport default FileUpload;\n","const API = {\n  STORAGE_NODE: 'https://broker-1.opacitynodes.com:3000'\n};\n\nexport const UPLOAD_OPTIONS = {\n  autostart: true,\n  endpoint: API.STORAGE_NODE,\n  params: {\n    blockSize: 64 * 1024, // 256 KiB encryption blocks\n    partSize: 10 * 1024 * 1024\n  }\n};\n\nexport const DOWNLOAD_OPTIONS = {\n  endpoint: API.STORAGE_NODE,\n  autostart: true\n};\n\nexport const HANDLE =\n  '8e4dfb806861314e21e2e648d96fdf90070f6c782587c785731bd278cbf6d005d5cfc6add4c51bc072dc370e6d4e05acf451a81cffda7680c360380760b66f18';\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Button from './styled/Button';\n\nfunction CopyUrl() {\n  const [buttonText, setButtonText] = useState('Copy to clipboard');\n\n  function handleClick() {\n    // @ts-ignore\n    document.getElementById('url-input').select();\n    document.execCommand('copy');\n    setButtonText('Copied!');\n  }\n\n  return (\n    <Wrapper>\n      <input id=\"url-input\" type=\"text\" readOnly value={window.location.href} />\n      <Button onClick={handleClick}>{buttonText}</Button>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  margin: 20px 0;\n  display: flex;\n  justify-content: center;\n\n  input {\n    width: 400px;\n    border: 2px solid #4287f5;\n    padding: 0 10px;\n    box-shadow: unset;\n    border-radius: 5px;\n    margin-right: 16px;\n  }\n`;\n\nexport default CopyUrl;\n","import React, { useState, useEffect } from 'react';\nimport { MasterHandle } from 'opaque';\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components';\n\nimport { UPLOAD_OPTIONS, DOWNLOAD_OPTIONS, HANDLE } from '../config/opq';\nimport useDocumentTitle from '../hooks/useDocumentTitle';\nimport CopyUrl from './CopyUrl';\nimport Loader from './Loader';\n\ninterface IProps {\n  match: {\n    params: {\n      handle: string;\n    };\n  };\n}\n\nfunction ImagePage({\n  match: {\n    params: { handle }\n  }\n}: IProps) {\n  const [image, setImage] = useState<string>('');\n  const [fileName, setFileName] = useState('');\n  useDocumentTitle(`OPQ PIC | ${fileName}`);\n  const history = useHistory();\n\n  useEffect(() => {\n    const opqHandler = new MasterHandle(\n      { handle: HANDLE },\n      { uploadOpts: UPLOAD_OPTIONS, downloadOpts: DOWNLOAD_OPTIONS }\n    );\n    const downloadHandler = opqHandler.downloadFile(handle);\n    downloadHandler.toFile().then((file: any) => {\n      const reader = new FileReader();\n      setFileName(file.name);\n\n      reader.addEventListener('load', function() {\n        const result = this.result as string;\n        setImage(result);\n      });\n\n      reader.readAsDataURL(file);\n    }).catch(() => {\n      history.push('/');\n    });\n  }, [handle, history]);\n\n  return (\n    <>\n      <CopyUrl />\n      {image ? <Image src={image} alt={fileName} /> : <Loader />}\n    </>\n  );\n}\n\nconst Image = styled.img`\n  max-width: 100vw;\n  max-height: calc(100vh - 200px);\n  display: block;\n  margin: 20px auto 100px auto;\n`;\n\nexport default ImagePage;\n","import React from 'react';\nimport { Router as BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nimport Navbar from '../components/Navbar';\nimport FileUpload from '../components/FileUpload';\nimport ImagePage from '../components/ImagePage';\n\nconst history = createBrowserHistory();\n\nfunction Router() {\n  return (\n    <BrowserRouter history={history}>\n      <Navbar />\n      <Switch>\n        <Route path=\"/share/:handle\" component={ImagePage} />\n        <Route path=\"/\" component={FileUpload} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { createGlobalStyle } from 'styled-components';\nimport 'normalize.css';\n\nconst GlobalStyle = createGlobalStyle`\n  &,\n  &::before, \n  &::after {\n    box-sizing: border-box;\n  }\n\n  html {\n    font-family: \"Lato\", sans-serif;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\n\nimport Router from './routes/Router';\nimport GlobalStyles from './components/GlobalStyles';\n\nconst App = () => {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}